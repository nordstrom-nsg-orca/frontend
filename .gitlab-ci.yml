cache:
  untracekd: true
  key: "$CI_BUILD_REF_NAME"
  paths:
    - node_modules/

stages:
  - install
  - lint
  - version
  - build
  - deploy

install:
  stage: install
  image: gitlab-registry.nordstrom.com/cicd/container-image-composer/buildtime/nodejs:10.15
  script:
    - npm install
    - npm install serverless-s3-sync --save

lint:
 stage: lint
 image: node:latest
 script:
    - npx eslint src/
 only:
  - merge_requests

version:
  stage: version
  variables:
    GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -i /tmp/.ssh/id_rsa"
  before_script:
    - mkdir -pvm 0700 /tmp/.ssh
    - echo "$SSH_KEY" > /tmp/.ssh/id_rsa
    - chmod 0400 /tmp/.ssh/id_rsa
  script:
    - python version.py "$CI_COMMIT_MESSAGE"
    - git config --global user.email "tchnsg@nordstrom.com"
    - git config --global user.name "app02395_robo_orca"
    - git remote set-url --push origin ssh://git@gitlab.nordstrom.com/${CI_PROJECT_PATH}
    - git add .
    - git commit -m "${CI_COMMIT_MESSAGE}"
    - git push -o ci.skip origin HEAD:master
  only:
    - master

build-stage:
  stage: build
  image: node:latest
  before_script:
    - export REACT_APP_CLIENT_ID=$REACT_APP_CLIENT_ID
    - export REACT_APP_OKTA_ISSUER=$REACT_APP_OKTA_ISSUER
    - export REACT_APP_DB_API_URL=$REACT_APP_DB_API_URL
    - export REACT_APP_INFOBLOX_PASS=$REACT_APP_INFOBLOX_PASS
    - git pull origin master
    - npm run build
  artifacts:
    expire_in: 1 hrs
    paths:
      - build/
  only:
     - master

deploy:
  stage: nonprod-deploy
  image: gitlab-registry.nordstrom.com/cicd/container-image-composer/deployment/serverless:1.57
  before_script:
    - export AWS_ACCESS_KEY_ID=$(echo ${nsg_ci} | jq -r '.Credentials.AccessKeyId')
    - export AWS_SECRET_ACCESS_KEY=$(echo ${nsg_ci} | jq -r '.Credentials.SecretAccessKey')
    - export AWS_SESSION_TOKEN=$(echo ${nsg_ci} | jq -r '.Credentials.SessionToken')
  script:
    - sls deploy
  dependencies:
    - build
  only:
     - master
